version: '3.9'
services:

  nginx:
    build: ./nginx
    container_name: nginx
    links:
      - backend
      - graylog
      - frontend
    depends_on:
      - backend
      - graylog
      - frontend
    volumes:
      - static_volume:/app/backend/staticfiles
      - media_volume:/app/backend/media
    ports:
      - "80:80"
      - "443:443"

  postgresql:
    image: postgres:12.0
    container_name: postgresql
    environment:
      - POSTGRES_USER=manager
      - POSTGRES_PASSWORD=pvlsazrmhjejwthkvrhlncwxuk
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  backend:
    container_name: api
    build: ./backend
    depends_on:
      - postgresql
    command: >
      sh -c " python manage.py makemigrations &&
              python manage.py migrate &&
              python manage.py collectstatic --noinput &&
              gunicorn settings.wsgi:application --bind 0.0.0.0:8000 --log-level debug --workers=15 --worker-class=gevent --worker-connections=500"

    ports:
      - "8000:8000"
    volumes:
      - static_volume:/app/backend/staticfiles
      - media_volume:/app/backend/media

  frontend:
    container_name: frontend
    build: ./frontend

  mongodb:
    image: "mongo:latest"
    container_name: mongo
    volumes:
      - "mongodb_data:/data/db"
    restart: "on-failure"

  opensearch:
    image: opensearchproject/opensearch:latest
    container_name: opensearch
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
      - "bootstrap.memory_lock=true"
      - "discovery.type=single-node"
      - "action.auto_create_index=false"
      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.disabled=true"
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - "os_data:/usr/share/opensearch/data"
    restart: "on-failure"

  graylog:
    hostname: "server"
    image: graylog/graylog:5.0
    container_name: graylog
    depends_on:
      opensearch:
        condition: "service_started"
      mongodb:
        condition: "service_started"
    entrypoint: "/usr/bin/tini -- wait-for-it opensearch:9200 --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/config/node-id"
      GRAYLOG_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET:?Please configure GRAYLOG_PASSWORD_SECRET in the .env file}"
      GRAYLOG_ROOT_PASSWORD_SHA2: "${GRAYLOG_ROOT_PASSWORD_SHA2:?Please configure GRAYLOG_ROOT_PASSWORD_SHA2 in the .env file}"
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
      GRAYLOG_ELASTICSEARCH_HOSTS: "http://opensearch:9200"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ports:
      - "5044:5044/tcp"
      - "5140:5140/udp"
      - "5140:5140/tcp"
      - "5555:5555/tcp"
      - "5555:5555/udp"
      - "9000:9000/tcp"
      - "12201:12201/tcp"
      - "12201:12201/udp"
      - "13301:13301/tcp"
      - "13302:13302/tcp"
    volumes:
      - "graylog_data:/usr/share/graylog/data/data"
      - "graylog_journal:/usr/share/graylog/data/journal"
    restart: "on-failure"

volumes:
  media_volume:
  static_volume:
  postgres_data:
  mongodb_data:
  os_data:
  graylog_data:
  graylog_journal: